{"version":3,"sources":["Components/LocationInfoBox.js","Components/FireMarker.js","Components/SnowMarker.js","Components/HeatMarker.js","Components/StormMarker.js","Components/FloodMarker.js","Components/IceMarker.js","Components/VolcanoMarker.js","Components/DroughtMarker.js","Components/DustMarker.js","Components/EarthquakeMarker.js","Components/LandslideMarker.js","Components/ManmadeMarker.js","Components/WaterMarker.js","Components/Map.js","Components/spinner.gif","Components/Loader.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["LocationInfoBox","info","className","id","title","dateTime","lati","longi","FireMarker","lat","lng","onClick","icon","fireIcon","SnowMarker","snowIcon","HeatMarker","heatIcon","StormMarker","stormIcon","FloodMarker","floodIcon","IceMarker","iceIcon","VolcanoMarker","volcanoIcon","DroughtMarker","droughtIcon","DustMarker","dustIcon","QuakeMarker","quakeIcon","LandslideMarker","slideIcon","ManmadeMarker","manIcon","WaterMarker","waterIcon","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","markers","map","ev","categories","geometries","coordinates","date","stormPath","i","push","length","type","EarthquakeMarker","bootstrapURLKeys","key","process","defaultProps","Loader","src","spinner","alt","nasaIcon","Header","dishIcon","satelliteIcon","App","setEventData","loading","setLoading","useEffect","a","fetch","response","json","events","fetchEvents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.944e9d4a.chunk.js","sourcesContent":["const LocationInfoBox = ({ info }) => {\r\n    return (\r\n        <div className=\"location-info\">\r\n            <ul>\r\n                <h2>ID: { info.id }</h2>\r\n                <li>TITLE:     <strong>{ info.title }</strong></li>\r\n                <li>DATE/TIME  <strong>{ info.dateTime }</strong></li>\r\n                <li>LATITUDE:  <strong>{ info.lati }</strong></li>\r\n                <li>LONGITUDE: <strong>{ info.longi }</strong></li>                \r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationInfoBox","import { Icon } from '@iconify/react'\r\nimport fireIcon from '@iconify/icons-mdi/fire'\r\n\r\nconst FireMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={fireIcon} className=\"fire-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FireMarker","import { Icon } from '@iconify/react'\r\nimport snowIcon from '@iconify-icons/map/snow'\r\n\r\nconst SnowMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={snowIcon} className=\"snow-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SnowMarker","import { Icon } from '@iconify/react'\r\nimport heatIcon from '@iconify-icons/carbon/temperature-hot'\r\n\r\n\r\nconst HeatMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={heatIcon} className=\"heat-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeatMarker","import { Icon } from '@iconify/react'\r\nimport stormIcon from '@iconify/icons-mdi/weather-hurricane'\r\n\r\nconst StormMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={stormIcon} className=\"storm-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StormMarker","import { Icon } from '@iconify/react'\r\nimport floodIcon from '@iconify-icons/wi/flood'\r\n\r\nconst FloodMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={floodIcon} className=\"flood-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FloodMarker","import { Icon } from '@iconify/react'\r\nimport iceIcon from '@iconify-icons/jam/mountain-f'\r\n\r\nconst IceMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={iceIcon} className=\"ice-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IceMarker","import { Icon } from '@iconify/react'\r\nimport volcanoIcon from '@iconify-icons/wi/volcano'\r\n\r\nconst VolcanoMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={volcanoIcon} className=\"volcano-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VolcanoMarker","import { Icon } from '@iconify/react'\r\nimport droughtIcon from '@iconify-icons/carbon/drought'\r\n\r\nconst DroughtMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={droughtIcon} className=\"drought-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DroughtMarker","import { Icon } from '@iconify/react'\r\nimport dustIcon from '@iconify-icons/carbon/windy-dust'\r\n\r\nconst DustMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={dustIcon} className=\"dust-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DustMarker","import { Icon } from '@iconify/react'\r\nimport quakeIcon from '@iconify-icons/ri/earthquake-fill'\r\n\r\nconst QuakeMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={quakeIcon} className=\"quake-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuakeMarker","import { Icon } from '@iconify/react'\r\nimport slideIcon from '@iconify-icons/ant-design/fall-outlined'\r\n\r\nconst LandslideMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={slideIcon} className=\"slide-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandslideMarker","import { Icon } from '@iconify/react'\r\nimport manIcon from '@iconify-icons/carbon/location-person-filled'\r\n\r\nconst ManmadeMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={manIcon} className=\"man-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManmadeMarker","import { Icon } from '@iconify/react'\r\nimport waterIcon from '@iconify/icons-mdi/water-alert'\r\n\r\nconst WaterMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={waterIcon} className=\"water-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WaterMarker","import { useState } from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport LocationInfoBox from './LocationInfoBox'\r\nimport FireMarker from './FireMarker'\r\nimport SnowMarker from './SnowMarker'\r\nimport HeatMarker from './HeatMarker'\r\nimport StormMarker from './StormMarker'\r\nimport FloodMarker from './FloodMarker'\r\nimport IceMarker from './IceMarker'\r\nimport VolcanoMarker from './VolcanoMarker'\r\nimport DroughtMarker from './DroughtMarker'\r\nimport DustMarker from './DustMarker'\r\nimport EarthquakeMarker from './EarthquakeMarker'\r\nimport LandslideMarker from './LandslideMarker'\r\nimport ManmadeMarker from './ManmadeMarker'\r\nimport WaterMarker from './WaterMarker'\r\n    \r\nconst Map = ({ eventData, center, zoom }) => {\r\n\r\n    const [ locationInfo, setLocationInfo ] = useState(null)\r\n    const TOK = process.env.REACT_APP_TOK\r\n\r\n    const markers = eventData.map(ev => {\r\n        switch (ev.categories[0].id) {\r\n            case 6:\r\n                return <DroughtMarker lat={ev.geometries[0].coordinates[1]} \r\n                    lng={ev.geometries[0].coordinates[0]} \r\n                    onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                     dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                     longi: ev.geometries[0].coordinates[0] })} />\r\n\r\n            case 7:\r\n                return <DustMarker lat={ev.geometries[0].coordinates[1]} \r\n                    lng={ev.geometries[0].coordinates[0]} \r\n                    onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                     dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                     longi: ev.geometries[0].coordinates[0] })} />\r\n\r\n            case 8:\r\n                return <FireMarker lat={ev.geometries[0].coordinates[1]} \r\n                    lng={ev.geometries[0].coordinates[0]} \r\n                    onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                     dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                     longi: ev.geometries[0].coordinates[0] })} />\r\n\r\n            case 9:\r\n                return <FloodMarker lat={ev.geometries[0].coordinates[1]} \r\n                    lng={ev.geometries[0].coordinates[0]} \r\n                    onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                     dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                     longi: ev.geometries[0].coordinates[0] })} />\r\n\r\n            case 10:\r\n                const stormPath = [];\r\n                for (let i = 0; i < ev.geometries.length; i++) {\r\n                    stormPath.push(\r\n                        <StormMarker lat={ev.geometries[i].coordinates[1]} \r\n                            lng={ev.geometries[i].coordinates[0]} \r\n                            onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                             dateTime: ev.geometries[i].date, lati: ev.geometries[i].coordinates[1],\r\n                             longi: ev.geometries[i].coordinates[0] })} /> \r\n                    )\r\n                }\r\n                return stormPath;\r\n\r\n            case 12:\r\n                if (ev.geometries[0].type !== \"Polygon\") {\r\n                    return <VolcanoMarker lat={ev.geometries[0].coordinates[1]} \r\n                        lng={ev.geometries[0].coordinates[0]} \r\n                        onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                        dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                        longi: ev.geometries[0].coordinates[0] })} />\r\n                }\r\n                else {\r\n                    // dealing with a polygon type data -- need to investigate how to parse and represent\r\n                    return null;\r\n                }\r\n\r\n            case 13:\r\n                return <WaterMarker lat={ev.geometries[0].coordinates[1]} \r\n                    lng={ev.geometries[0].coordinates[0]} \r\n                    onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                     dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                     longi: ev.geometries[0].coordinates[0] })} />\r\n\r\n            case 14:\r\n                return <LandslideMarker lat={ev.geometries[0].coordinates[1]} \r\n                    lng={ev.geometries[0].coordinates[0]} \r\n                    onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                     dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                     longi: ev.geometries[0].coordinates[0] })} />\r\n\r\n            case 15:\r\n                return <IceMarker lat={ev.geometries[0].coordinates[1]} \r\n                    lng={ev.geometries[0].coordinates[0]} \r\n                    onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                     dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                     longi: ev.geometries[0].coordinates[0] })} />\r\n            case 16:\r\n                return <EarthquakeMarker lat={ev.geometries[0].coordinates[1]} \r\n                    lng={ev.geometries[0].coordinates[0]} \r\n                    onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                     dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                     longi: ev.geometries[0].coordinates[0] })} />\r\n\r\n            case 17:\r\n                return <SnowMarker lat={ev.geometries[0].coordinates[1]} \r\n                    lng={ev.geometries[0].coordinates[0]} \r\n                    onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                     dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                     longi: ev.geometries[0].coordinates[0] })} />\r\n\r\n            case 18:\r\n                return <HeatMarker lat={ev.geometries[0].coordinates[1]} \r\n                    lng={ev.geometries[0].coordinates[0]} \r\n                    onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                     dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                     longi: ev.geometries[0].coordinates[0] })} />\r\n            case 19:\r\n                return <ManmadeMarker lat={ev.geometries[0].coordinates[1]} \r\n                    lng={ev.geometries[0].coordinates[0]} \r\n                    onClick={() => setLocationInfo({ id: ev.id, title: ev.title,\r\n                     dateTime: ev.geometries[0].date, lati: ev.geometries[0].coordinates[1],\r\n                     longi: ev.geometries[0].coordinates[0] })} />\r\n\r\n            default:\r\n                return null\r\n            \r\n        }\r\n    })\r\n\r\n    // return the GoogleMapReact component with default properties defined below\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: TOK }}\r\n                center={ center }\r\n                zoom={ zoom }\r\n            >\r\n\r\n                { markers }\r\n\r\n            </GoogleMapReact>\r\n\r\n            {/*verify there is locationInfo for the event, and show info box */}\r\n            { locationInfo && <LocationInfoBox info={ locationInfo } /> }\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 38.5,\r\n        lng: -95.5  // these values center on NA to start\r\n    },\r\n    zoom: 4\r\n}\r\n\r\nexport default Map","export default __webpack_public_path__ + \"static/media/spinner.ec715867.gif\";","import spinner from './spinner.gif'\r\nimport { Icon } from '@iconify/react'\r\nimport nasaIcon from '@iconify-icons/simple-icons/nasa'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <h1>Fetching Data from...</h1>\r\n            <img src={ spinner } alt=\"Loading\" />\r\n            <Icon icon={ nasaIcon } className=\"load-nasa-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import { Icon } from '@iconify/react'\r\nimport satelliteIcon from '@iconify-icons/fa-solid/satellite'\r\nimport dishIcon from '@iconify-icons/fa-solid/satellite-dish'\r\nimport nasaIcon from '@iconify-icons/simple-icons/nasa'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>\r\n                <Icon icon={ dishIcon } className=\"dish-icon\" />\r\n                Natural Event Tracker &lt; Powered by <Icon icon={ nasaIcon } className=\"head-nasa-icon\"/> /&gt;\r\n                <Icon icon={ satelliteIcon } className=\"satellite-icon\" />\r\n            \r\n            </h1>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { useState, useEffect } from 'react'\nimport Map from './Components/Map'\nimport Loader from './Components/Loader'\nimport Header from './Components/Header'\n\nfunction App() {\n  const [eventData, setEventData] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true)\n      const response = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n      const { events } = await response.json()\n\n      setEventData(events)\n      setLoading(false)\n    }\n\n    fetchEvents()\n\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      { !loading ? <Map eventData={ eventData } /> :  <Loader /> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}